/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package inheritance;

import org.junit.Test;
import static org.junit.Assert.*;

public class LibraryTest {


    @Test public void someLibraryMethodReturnsTrue() {
        Library classUnderTest = new Library();
        assertTrue("someLibraryMethod should return 'true'", classUnderTest.someLibraryMethod());
    }
    //    RESTAURANT TEST
    @Test
    public void constructorTestRes(){
        Restaurant test = new Restaurant("kfc", 4 ,"$");
        String expectedName = "kfc";
        assertEquals("kfc",test.getName());
        assertEquals(3.0,test.getNumberOfStars(),1.2);
        assertEquals("$",test.getPriceCategory());
    }


    @Test
    public void testToStringRestaurant() {
        Review test = new Review("Good restaurant","Meghem",5);
        assertEquals("Review{body='Good restaurant', author='Meghem', stars=5.0}",String.valueOf(test));

    }

    @Test
    public void TestAddReviewRes(){
        Restaurant test = new Restaurant("kfc", 4 ,"$");
        Review test1 = new Review("Good restaurant","Meghem",5);
        test.addReview(test1);
        assertTrue("return true if add review", test.getReviews().size() == 1);
    }

    //   REVIEW TEST
    @Test
    public void constructorTestRev(){
        Review test = new Review("Good restaurant", "Meghem",5);
        String expectedName = "kfc";
        assertEquals("Good restaurant",test.getBody());
        assertEquals("Meghem",test.getAuthor());
        assertEquals(5,test.getStars(),0.1);

    }

    //    SHOP TEST
    @Test
    public void testToStringShop() {
        Shop test = new Shop("carrefour","supermarket",3);
        assertEquals("Shop{name='carrefour', description='supermarket', numOfDollarSigns=3}",String.valueOf(test));

    }


    @Test
    public void constructorTestShop(){
        Shop test = new Shop("carrefour", "supermarket",3);
        String expectedName = "carrefour";
        assertEquals("carrefour",test.getName());
        assertEquals("supermarket",test.getDescription());
        assertEquals(3,test.getNumOfDollarSign());

    }

//    THEATER TESTS
    @Test
    public void constructorTheater() {
    Theater movie = new Theater("azzam");
    assertEquals("azzam",movie.getName());
    }

    @Test
    public void testToStringTheater() {
        Theater test = new Theater("azzam");
        assertEquals("Theater{name='azzam', movies[], reviews={}}",String.valueOf(test));

    }

    @Test
    public void TestAddReview(){
        Theater testAdd = new Theater("test");
        testAdd.addNewRev("test","test",5);
        assertTrue("return true if add review", testAdd.getReviews().size() == 1);
    }
    @Test
    public void TestAddAndRemoveReview(){
        Theater testAdd = new Theater("test");
        testAdd.addMovie("test1");
        assertTrue("return true if add movie", testAdd.getMovies().size() == 1);
        testAdd.removeMovie("test1");
        assertTrue("return true if remove movie", testAdd.getMovies().size() == 0);
    }


}
